<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>天气新闻APP</title>
      <link href="/2022/01/04/tian-qi-xin-wen-app/"/>
      <url>/2022/01/04/tian-qi-xin-wen-app/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> android </tag>
            
            <tag> okhttp </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于flask的实时人流量监测数据可视化项目</title>
      <link href="/2021/12/07/socket/"/>
      <url>/2021/12/07/socket/</url>
      
        <content type="html"><![CDATA[<h1 id="运用socket实现云服务端的数据接收"><a href="#运用socket实现云服务端的数据接收" class="headerlink" title="运用socket实现云服务端的数据接收"></a>运用socket实现云服务端的数据接收</h1><ul><li>首先要配置好云服务端，我这里用的python语言进行程序的编写。主要方法分为两个。因为接收的数据是json数据，我主要的方法是用python将传输过来数据类型转化为json。因为socket的传输只能bytes的数据类型。</li></ul><ol><li>先用socket方法连接到云服务端  <pre class=" language-python"><code class="language-python"> HOST <span class="token operator">=</span> <span class="token string">'192.168.147.1'</span><span class="token comment" spellcheck="true">#socket.gethostbyname(name)  </span> PORT <span class="token operator">=</span> <span class="token number">8080</span>   s <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span><span class="token punctuation">)</span>   s<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token punctuation">(</span>HOST<span class="token punctuation">,</span>PORT<span class="token punctuation">)</span><span class="token punctuation">)</span>   s<span class="token punctuation">.</span>listen<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"listening"</span><span class="token punctuation">)</span>   conn<span class="token punctuation">,</span>addr <span class="token operator">=</span> s<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"connected by "</span><span class="token punctuation">,</span>addr<span class="token punctuation">)</span></code></pre></li><li>设置循环将数据接收并以json格式保存  <pre class=" language-python"><code class="language-python"> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>       time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>       data<span class="token operator">=</span>conn<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">102400</span><span class="token punctuation">)</span>       data1 <span class="token operator">=</span> data       team<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">(</span>data1<span class="token punctuation">)</span>       i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>   <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'mydata.json'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>       json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>team<span class="token punctuation">,</span> f<span class="token punctuation">)</span>       If <span class="token operator">not</span> data<span class="token punctuation">:</span>       <span class="token keyword">break</span>   conn<span class="token punctuation">.</span>sendall<span class="token punctuation">(</span>b<span class="token string">'Data received: '</span> <span class="token operator">+</span> data1<span class="token punctuation">)</span>  </code></pre></li></ol><h1 id="配置服务端实现后台运行python程序"><a href="#配置服务端实现后台运行python程序" class="headerlink" title="配置服务端实现后台运行python程序"></a>配置服务端实现后台运行python程序</h1><ul><li>了解flask框架，然后编写相关程序服务端配置：</li></ul><ol><li>完整的flask项目</li><li>服务器，或者自己用虚拟机也行，我这里用的是阿里云，cenros7.3</li><li>Flask框架对于web端的相关代码<pre class=" language-python"><code class="language-python"> @app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/addrec'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token keyword">def</span> <span class="token function">addrec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>       <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>           <span class="token keyword">try</span><span class="token punctuation">:</span>               nm <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'nm'</span><span class="token punctuation">]</span>               addr <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'add'</span><span class="token punctuation">]</span>               city <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'city'</span><span class="token punctuation">]</span>               pin <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'pin'</span><span class="token punctuation">]</span>             <span class="token keyword">with</span> sql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">"database.db"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> con<span class="token punctuation">:</span>                   cur <span class="token operator">=</span> con<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>                   cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"INSERT INTO students (name,addr,city,pin)VALUES(?, ?, ?, ?)"</span><span class="token punctuation">,</span><span class="token punctuation">(</span>nm<span class="token punctuation">,</span>addr<span class="token punctuation">,</span>city<span class="token punctuation">,</span>pin<span class="token punctuation">)</span> <span class="token punctuation">)</span>                   con<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>                   msg <span class="token operator">=</span> <span class="token string">"Record successfully added"</span>           <span class="token keyword">except</span><span class="token punctuation">:</span>               con<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>               msg <span class="token operator">=</span> <span class="token string">"error in insert operation"</span>           <span class="token keyword">finally</span><span class="token punctuation">:</span>               <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"result.html"</span><span class="token punctuation">,</span> msg<span class="token operator">=</span>msg<span class="token punctuation">)</span>               con<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  </code></pre></li><li>实现flask网页响应数据库读取实现可视化<br><img src="/medias/flask/pt1.png" alt="数据库配置"><br><img src="/medias/flask/pt2.png" alt="然后编写html的相关代码并放入templates中"></li></ol><ul><li>最后将html文件绑定到flask中实现网页的显示<h3 id="显示数据库内容相关代码"><a href="#显示数据库内容相关代码" class="headerlink" title="显示数据库内容相关代码"></a>显示数据库内容相关代码</h3><pre class=" language-python"><code class="language-python">@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/addrec'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">addrec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                con <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">"106.14.247.240"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">)</span>               cur <span class="token operator">=</span> con<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>                cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from original_data"</span><span class="token punctuation">)</span>                rows <span class="token operator">=</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>               <span class="token keyword">for</span> row <span class="token keyword">in</span> rows<span class="token punctuation">:</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                msg <span class="token operator">=</span> <span class="token string">"Record successfully added"</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                con<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>                msg <span class="token operator">=</span> <span class="token string">"error in insert operation"</span>            <span class="token keyword">finally</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"list.html"</span><span class="token punctuation">,</span> rows<span class="token operator">=</span>rows<span class="token punctuation">)</span>                con<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    @app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/list'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        con <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">"106.14.247.240"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">)</span>        cur <span class="token operator">=</span> con<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from original_data"</span><span class="token punctuation">)</span>        rows <span class="token operator">=</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"list.html"</span><span class="token punctuation">,</span> rows<span class="token operator">=</span>rows<span class="token punctuation">)</span> </code></pre><h3 id="显示图像相关代码"><a href="#显示图像相关代码" class="headerlink" title="显示图像相关代码"></a>显示图像相关代码</h3><pre class=" language-python"><code class="language-python">  @app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">"/jianshu"</span><span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">jianshu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">import</span> matplotlib    matplotlib<span class="token punctuation">.</span>use<span class="token punctuation">(</span><span class="token string">'Agg'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 不出现画图的框  </span>  <span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIO    <span class="token keyword">import</span> base64    <span class="token keyword">import</span> pymysql    <span class="token comment" spellcheck="true"># 这段正常画图  </span>  <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">"106.14.247.240"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 开启一个游标cursor  </span>  cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 获取phone数据表里的所有数据  </span>  sql <span class="token operator">=</span> <span class="token string">'select * from original_data'</span>    <span class="token comment" spellcheck="true"># 执行sql中的语句  </span>  cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 将获取到的sql数据全部显示出来</span>  result <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 定义需要用上的空数据数组，然后通过遍历数据库的数据将数据附上去</span>  xname <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    ynum <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 遍历表里的数据</span>  <span class="token keyword">for</span> x <span class="token keyword">in</span> result<span class="token punctuation">:</span>        xname<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        ynum<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 创建一个figure（一个窗口）来显示折线图</span>  plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>xname<span class="token punctuation">,</span> ynum<span class="token punctuation">)</span>   plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'count'</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>rotation<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> x<span class="token punctuation">,</span> y <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>ynum<span class="token punctuation">)</span><span class="token punctuation">:</span>        plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">'%s'</span> <span class="token operator">%</span> y<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 显示图表</span>  plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>    sio <span class="token operator">=</span> BytesIO<span class="token punctuation">(</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span>sio<span class="token punctuation">,</span> format<span class="token operator">=</span><span class="token string">'png'</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> base64<span class="token punctuation">.</span>encodebytes<span class="token punctuation">(</span>sio<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 记得关闭，不然画出来的图是重复的</span>  <span class="token comment" spellcheck="true">#return html.format(data)  </span>  <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"chart.html"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># format的作用是将data填入{}  </span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> socket </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> python </tag>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双目识别项目</title>
      <link href="/2021/01/04/shuang-mu-shi-bie-xiang-mu/"/>
      <url>/2021/01/04/shuang-mu-shi-bie-xiang-mu/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="入门知识：双目测距原理-以下内容均摘抄自点击此处"><a href="#入门知识：双目测距原理-以下内容均摘抄自点击此处" class="headerlink" title="入门知识：双目测距原理(以下内容均摘抄自点击此处)"></a>入门知识：双目测距原理(以下内容均摘抄自<a href="https://blog.csdn.net/u013832707/article/details/53781810">点击此处</a>)</h1><ul><li>摄像机成像过程中，存在四个坐标系，分别是：1.像素坐标系2.图像坐标系3.相机坐标系4.世界坐标系<br>以像素坐标系建立坐标系，原点设为O，横纵坐标系分别设为v和u分别用来表示像素点在图像中的行数和列数。<br>图像坐标系的原点为相机的光轴与图像平面的交点，一般为图像平面的中心。图像坐标系的x轴与像素坐标系<br>u轴平行，y轴与v轴平行。令图像坐标系O1在像素坐标系在O-uv  中的坐标为（u0，v0）；dx和dy设为单位<br>像素在横轴和纵轴上的物理尺寸。两坐标系之间存在如下关系<br>u = x / dx + u0<br>v = y / dy + v0<br><img src="/medias/de/ca.png" alt="坐标轴"><br>用矩阵的方式表达此式子：<br><img src="/medias/de/Matrix.png" alt="矩阵表达式"><br><img src="/medias/de/light.png"><br><img src="/medias/de/estimation.png"></li></ul><h1 id="双目测距流程"><a href="#双目测距流程" class="headerlink" title="双目测距流程"></a>双目测距流程</h1><ul><li>双目标定 -&gt; 立体校正 -&gt; 立体匹配 -&gt; 视差计算 -&gt; 深度计算</li></ul><h1 id="双目摄像机标定"><a href="#双目摄像机标定" class="headerlink" title="双目摄像机标定"></a>双目摄像机标定</h1><ul><li>使用matlab的相机校准工具箱,用python存储标定好的数据  <h4 id="1-拍摄10到20张包含校准团的图像"><a href="#1-拍摄10到20张包含校准团的图像" class="headerlink" title="1.拍摄10到20张包含校准团的图像"></a>1.拍摄10到20张包含校准团的图像</h4><h4 id="2-提高标定精度，将一些模糊重影的图像删除，添加一些新的清晰明亮的图像，将3-coeefficients、Tangential-Distortion、Skew全部勾选"><a href="#2-提高标定精度，将一些模糊重影的图像删除，添加一些新的清晰明亮的图像，将3-coeefficients、Tangential-Distortion、Skew全部勾选" class="headerlink" title="2.提高标定精度，将一些模糊重影的图像删除，添加一些新的清晰明亮的图像，将3 coeefficients、Tangential Distortion、Skew全部勾选"></a>2.提高标定精度，将一些模糊重影的图像删除，添加一些新的清晰明亮的图像，将3 coeefficients、Tangential Distortion、Skew全部勾选</h4><h4 id="3-标定结果应用到OpenCV，-通过matlab标定后得到的旋转矩阵R和内参矩阵K，都需要转置以后才可以给OpenCV用，另外畸变向量中畸变系数的次序是：-k1-k2-p1-p2-k3"><a href="#3-标定结果应用到OpenCV，-通过matlab标定后得到的旋转矩阵R和内参矩阵K，都需要转置以后才可以给OpenCV用，另外畸变向量中畸变系数的次序是：-k1-k2-p1-p2-k3" class="headerlink" title="3.标定结果应用到OpenCV， 通过matlab标定后得到的旋转矩阵R和内参矩阵K，都需要转置以后才可以给OpenCV用，另外畸变向量中畸变系数的次序是：[k1, k2, p1, p2, k3]"></a>3.标定结果应用到OpenCV， 通过matlab标定后得到的旋转矩阵R和内参矩阵K，都需要转置以后才可以给OpenCV用，另外畸变向量中畸变系数的次序是：[k1, k2, p1, p2, k3]</h4></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np    <span class="token comment" spellcheck="true">#左摄像头参数</span>Lmatrix <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#标定参数填入</span>Ld <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#畸变系数参数填入</span>    <span class="token comment" spellcheck="true">#右摄像头参数</span>Rmatrix <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#标定参数填入</span>Rd <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#畸变系数参数填入</span>    <span class="token comment" spellcheck="true"># 旋转矩阵</span>self<span class="token punctuation">.</span>R <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 平移矩阵</span>self<span class="token punctuation">.</span>T <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 主点列坐标的差</span>self<span class="token punctuation">.</span>doffs <span class="token operator">=</span> <span class="token number">0.0</span>    <span class="token comment" spellcheck="true"># 指示上述内外参是否为经过立体校正后的结果</span>self<span class="token punctuation">.</span>isRectified <span class="token operator">=</span> <span class="token boolean">False</span></code></pre><h1 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h1><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">preprocess</span><span class="token punctuation">(</span>img1<span class="token punctuation">,</span> img2<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 彩色图->灰度图</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>img1<span class="token punctuation">.</span>ndim <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        img1 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img1<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 通过OpenCV加载的图像通道顺序是BGR</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>img2<span class="token punctuation">.</span>ndim <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        img2 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img2<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 直方图均衡</span>    img1 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>equalizeHist<span class="token punctuation">(</span>img1<span class="token punctuation">)</span>    img2 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>equalizeHist<span class="token punctuation">(</span>img2<span class="token punctuation">)</span>    <span class="token keyword">return</span> img1<span class="token punctuation">,</span> img2    <span class="token comment" spellcheck="true"># 消除畸变</span><span class="token keyword">def</span> <span class="token function">undistortion</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> camera_matrix<span class="token punctuation">,</span> dist_coeff<span class="token punctuation">)</span><span class="token punctuation">:</span>    undistortion_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>undistort<span class="token punctuation">(</span>image<span class="token punctuation">,</span> camera_matrix<span class="token punctuation">,</span> dist_coeff<span class="token punctuation">)</span>    <span class="token keyword">return</span> undistortion_image</code></pre><h1 id="利用立体匹配SGBM算法和实现双目测距"><a href="#利用立体匹配SGBM算法和实现双目测距" class="headerlink" title="利用立体匹配SGBM算法和实现双目测距"></a>利用立体匹配SGBM算法和实现双目测距</h1><ul><li>参考博客:<a href="https://blog.csdn.net/lg1259156776/article/details/53103527">BM匹配算法</a>  </li><li>参考博客：<a href="https://blog.csdn.net/dulingwen/article/details/98071584">深度测量</a>  </li><li>参考博客：<a href="https://www.jianshu.com/p/07b499ae5c7d">SGBM算法</a></li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 视差计算</span><span class="token keyword">def</span> <span class="token function">stereoMatchSGBM</span><span class="token punctuation">(</span>left_image<span class="token punctuation">,</span> right_image<span class="token punctuation">,</span> down_scale<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># SGBM匹配参数设置</span>    <span class="token keyword">if</span> left_image<span class="token punctuation">.</span>ndim <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>        img_channels <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        img_channels <span class="token operator">=</span> <span class="token number">3</span>    blockSize <span class="token operator">=</span> <span class="token number">3</span>    paraml <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'minDisparity'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>             <span class="token string">'numDisparities'</span><span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span>             <span class="token string">'blockSize'</span><span class="token punctuation">:</span> blockSize<span class="token punctuation">,</span>             <span class="token string">'P1'</span><span class="token punctuation">:</span> <span class="token number">8</span> <span class="token operator">*</span> img_channels <span class="token operator">*</span> blockSize <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">,</span>             <span class="token string">'P2'</span><span class="token punctuation">:</span> <span class="token number">32</span> <span class="token operator">*</span> img_channels <span class="token operator">*</span> blockSize <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">,</span>             <span class="token string">'disp12MaxDiff'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>             <span class="token string">'preFilterCap'</span><span class="token punctuation">:</span> <span class="token number">63</span><span class="token punctuation">,</span>             <span class="token string">'uniquenessRatio'</span><span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span>             <span class="token string">'speckleWindowSize'</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>             <span class="token string">'speckleRange'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>             <span class="token string">'mode'</span><span class="token punctuation">:</span> cv2<span class="token punctuation">.</span>STEREO_SGBM_MODE_SGBM_3WAY             <span class="token punctuation">}</span>     <span class="token comment" spellcheck="true"># 构建SGBM对象</span>    left_matcher <span class="token operator">=</span> cv2<span class="token punctuation">.</span>StereoSGBM_create<span class="token punctuation">(</span><span class="token operator">**</span>paraml<span class="token punctuation">)</span>    paramr <span class="token operator">=</span> paraml    paramr<span class="token punctuation">[</span><span class="token string">'minDisparity'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>paraml<span class="token punctuation">[</span><span class="token string">'numDisparities'</span><span class="token punctuation">]</span>    right_matcher <span class="token operator">=</span> cv2<span class="token punctuation">.</span>StereoSGBM_create<span class="token punctuation">(</span><span class="token operator">**</span>paramr<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 计算视差图</span>    size <span class="token operator">=</span> <span class="token punctuation">(</span>left_image<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> left_image<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> down_scale <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>        disparity_left <span class="token operator">=</span> left_matcher<span class="token punctuation">.</span>compute<span class="token punctuation">(</span>left_image<span class="token punctuation">,</span> right_image<span class="token punctuation">)</span>        disparity_right <span class="token operator">=</span> right_matcher<span class="token punctuation">.</span>compute<span class="token punctuation">(</span>right_image<span class="token punctuation">,</span> left_image<span class="token punctuation">)</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>        left_image_down <span class="token operator">=</span> cv2<span class="token punctuation">.</span>pyrDown<span class="token punctuation">(</span>left_image<span class="token punctuation">)</span>        right_image_down <span class="token operator">=</span> cv2<span class="token punctuation">.</span>pyrDown<span class="token punctuation">(</span>right_image<span class="token punctuation">)</span>        factor <span class="token operator">=</span> left_image<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> left_image_down<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>         disparity_left_half <span class="token operator">=</span> left_matcher<span class="token punctuation">.</span>compute<span class="token punctuation">(</span>left_image_down<span class="token punctuation">,</span> right_image_down<span class="token punctuation">)</span>        disparity_right_half <span class="token operator">=</span> right_matcher<span class="token punctuation">.</span>compute<span class="token punctuation">(</span>right_image_down<span class="token punctuation">,</span> left_image_down<span class="token punctuation">)</span>        disparity_left <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>disparity_left_half<span class="token punctuation">,</span> size<span class="token punctuation">,</span> interpolation<span class="token operator">=</span>cv2<span class="token punctuation">.</span>INTER_AREA<span class="token punctuation">)</span>        disparity_right <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>disparity_right_half<span class="token punctuation">,</span> size<span class="token punctuation">,</span> interpolation<span class="token operator">=</span>cv2<span class="token punctuation">.</span>INTER_AREA<span class="token punctuation">)</span>        disparity_left <span class="token operator">=</span> factor <span class="token operator">*</span> disparity_left        disparity_right <span class="token operator">=</span> factor <span class="token operator">*</span> disparity_right     <span class="token comment" spellcheck="true"># 真实视差（因为SGBM算法得到的视差是×16的）</span>    trueDisp_left <span class="token operator">=</span> disparity_left<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">.</span>    trueDisp_right <span class="token operator">=</span> disparity_right<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">.</span>     <span class="token keyword">return</span> trueDisp_left<span class="token punctuation">,</span> trueDisp_right</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> OpenCV </tag>
            
            <tag> camera </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask框架实操项目</title>
      <link href="/2020/09/07/flask-xiang-mu-ying-yong/"/>
      <url>/2020/09/07/flask-xiang-mu-ying-yong/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my new blog</title>
      <link href="/2020/02/07/my-new-blog/"/>
      <url>/2020/02/07/my-new-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="博客文章测试"><a href="#博客文章测试" class="headerlink" title="博客文章测试"></a>博客文章测试</h1><h2 id="小标题测试"><a href="#小标题测试" class="headerlink" title="小标题测试"></a>小标题测试</h2><ul><li>换行测试<br>第一行内容</li><li>换行测试<br>第二行内容<br>##网络图片测试<br><img src="https://img1.baidu.com/it/u=425649787,2164930474&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=889&amp;h=500"><br>##本地图片测试<br><img src="/medias/featureimages/8.jpg"></li></ul><p>##超链接测试<br><a href="https://www.bilibili.com/">bilibili</a></p><ol><li>测试</li><li>测试</li><li>测试</li></ol>]]></content>
      
      
      <categories>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
